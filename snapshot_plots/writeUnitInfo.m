function writeUnitInfo(spikeStruct, ax, textX, textY, isMinimal)

if nargin < 5
    isMinimal = 0;
end

textParams = {'Units', 'normalized', 'FontSize', 8, 'Interpreter', 'none', 'VerticalAlignment', 'top'};

if ~isMinimal
    text(ax, textX, textY, {...
            sprintf('%s (#%d in session)', spikeStruct.name, spikeStruct.unitIndInSession), ...
            sprintf('Num Spikes in Blocks: %d', numel(spikeStruct.ts)), ...
            sprintf('Threshold: %0.3f', spikeStruct.threshold), ...
            sprintf('Mean SD in Blocks: %0.3f', mean(std(spikeStruct.wf))), ...
            sprintf('Full-Width Half-Max: %0.3f ms', spikeStruct.fullWidthHalfMax*1000), ...
            sprintf('Trough to Peak Time: %0.3f ms', spikeStruct.troughToPeakTime*1000), ...
            sprintf('Inflection Pattern: %s', spikeStruct.inflectionPattern), ...
            sprintf('Putative Physiol. Class: %s', spikeStruct.physClass)}, ...
            textParams{:});
else
    text(ax, textX, textY, {...
            sprintf('%s', spikeStruct.name), ...
            sprintf('Trough to Peak Time: %0.3f ms', spikeStruct.troughToPeakTime*1000), ...
            ...sprintf('Full-Width Half-Max: %0.3f ms', spikeStruct.fullWidthHalfMax*1000), ...
            ...sprintf('Inflection Pattern: %s', spikeStruct.inflectionPattern), ...
            sprintf('Putative Physiol. Class: %s', spikeStruct.physClass)}, ...
            textParams{:});
end